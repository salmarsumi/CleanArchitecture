{"ast":null,"code":"import _asyncToGenerator from \"D:\\\\Development\\\\Repos\\\\CA\\\\src\\\\CA.WebAngular\\\\ClientApp\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isLoggedIn = false;\n    this.user = null;\n  }\n\n  getSession() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const session = yield _this.http.get(environment.host + '/account/session').toPromise();\n\n      if (session === null || session === void 0 ? void 0 : session.user) {\n        _this.isLoggedIn = true;\n        _this.user = session.user;\n      } else {\n        _this.isLoggedIn = false;\n        _this.user = null;\n      }\n    })();\n  }\n\n}\n\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["D:/Development/Repos/CA/src/CA.WebAngular/ClientApp/src/app/services/auth.service.ts"],"names":["environment","i0","i1","AuthService","constructor","http","isLoggedIn","user","getSession","session","get","host","toPromise","ɵfac","AuthService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,gCAA5B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,WAAN,CAAkB;AACrBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,IAAL,GAAY,IAAZ;AACH;;AACKC,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,YAAMC,OAAO,SAAS,KAAI,CAACJ,IAAL,CAAUK,GAAV,CAAcV,WAAW,CAACW,IAAZ,GAAmB,kBAAjC,EAAqDC,SAArD,EAAtB;;AACA,UAAIH,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACF,IAA9D,EAAoE;AAChE,QAAA,KAAI,CAACD,UAAL,GAAkB,IAAlB;AACA,QAAA,KAAI,CAACC,IAAL,GAAYE,OAAO,CAACF,IAApB;AACH,OAHD,MAIK;AACD,QAAA,KAAI,CAACD,UAAL,GAAkB,KAAlB;AACA,QAAA,KAAI,CAACC,IAAL,GAAY,IAAZ;AACH;AATc;AAUlB;;AAhBoB;;AAkBzBJ,WAAW,CAACU,IAAZ,GAAmB,SAASC,mBAAT,CAA6BC,CAA7B,EAAgC;AAAE,SAAO,KAAKA,CAAC,IAAIZ,WAAV,EAAuBF,EAAE,CAACe,QAAH,CAAYd,EAAE,CAACe,UAAf,CAAvB,CAAP;AAA4D,CAAjH;;AACAd,WAAW,CAACe,KAAZ,GAAoB,aAAcjB,EAAE,CAACkB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEjB,WAAT;AAAsBkB,EAAAA,OAAO,EAAElB,WAAW,CAACU,IAA3C;AAAiDS,EAAAA,UAAU,EAAE;AAA7D,CAAtB,CAAlC","sourcesContent":["import { environment } from '../../environments/environment';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class AuthService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.isLoggedIn = false;\r\n        this.user = null;\r\n    }\r\n    async getSession() {\r\n        const session = await this.http.get(environment.host + '/account/session').toPromise();\r\n        if (session === null || session === void 0 ? void 0 : session.user) {\r\n            this.isLoggedIn = true;\r\n            this.user = session.user;\r\n        }\r\n        else {\r\n            this.isLoggedIn = false;\r\n            this.user = null;\r\n        }\r\n    }\r\n}\r\nAuthService.ɵfac = function AuthService_Factory(t) { return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient)); };\r\nAuthService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: AuthService, factory: AuthService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}