version: '3.9'

services:
  identity-proxy:
    ports:
      - "8090:8090"
      - "8091:8091"
    volumes:
      - ./nginx-id.conf:/etc/nginx/nginx.conf:ro
      - ./certs/server.crt:/etc/nginx/conf/server.crt
      - ./certs/server.key:/etc/nginx/conf/server.key
    networks:
      - ca
    restart: always

  bff-proxy:
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - ./nginx-bff.conf:/etc/nginx/nginx.conf:ro
      - ./certs/server.crt:/etc/nginx/conf/server.crt
      - ./certs/server.key:/etc/nginx/conf/server.key
    networks:
      - ca
    restart: always


  identity:
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_URLS=http://+:80
      - ExternalAddress=https://${EXTERNAL_HOST_NAME}:8091
      - ClientUri=https://${EXTERNAL_HOST_NAME}:8081
    volumes:
      - identity-dpk:/home/wfs/.aspnet/DataProtection-Keys
    expose:
      - "80"
    networks:
      - ca
    restart: always
  
  authorization:
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_URLS=http://+:80
      - TokenAuthority=http://identity
    expose:
      - "80"
    networks:
      - ca
    restart: always

  api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_URLS=http://+:80
      - TokenAuthority=http://identity
      - AuthorizationService=http://authorization
    expose:
      - "80"
    networks:
      - ca
    restart: always

  bff:
    environment:
      - ASPNETCORE_ENVIRONMENT=Staging
      - ASPNETCORE_URLS=http://+:80
      - TokenAuthority=https://${EXTERNAL_HOST_NAME}:8091
      - ReverseProxy__Clusters__apicluster__Destinations__api1__Address=http://api
    volumes:
      - bff-dpk:/home/wfs/.aspnet/DataProtection-Keys
    expose:
      - "80"
    networks:
      - ca
    restart: always
    extra_hosts:
      - "${EXTERNAL_HOST_NAME}:host-gateway"

networks:
  ca:

volumes:
  identity-dpk:
  bff-dpk:
