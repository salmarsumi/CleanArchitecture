pid /tmp/nginx.pid;

events {
    worker_connections  1024;
}

http {
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # BFF
    server {
        listen 8080 ssl;
        server_name _;

        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
      
        # Specifies the maximum accepted body size of a client request,
        # as indicated by the request header Content-Length.
        client_max_body_size 256k;

        ssl_certificate /etc/nginx/conf/server.crt;
        ssl_certificate_key /etc/nginx/conf/server.key;

        error_page  497 https://$host:8080$request_uri;

        location ~ ^/(live|ready|metrics) {
            deny all;
            return 403;
        }

        location / {
            proxy_pass http://bff;
            # force timeouts if the backend dies
            proxy_read_timeout 600s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_redirect off;

            # set headers
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # identity
    server {
        listen 8090 ssl;
        server_name _;

        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
      
        # Specifies the maximum accepted body size of a client request,
        # as indicated by the request header Content-Length.
        client_max_body_size 256k;

        ssl_certificate /etc/nginx/conf/server.crt;
        ssl_certificate_key /etc/nginx/conf/server.key;

        error_page  497 https://$host:8090$request_uri;

        location ~ ^/(live|ready|metrics) {
            deny all;
            return 403;
        }

        location / {
            proxy_pass http://identity;
            # force timeouts if the backend dies
            proxy_read_timeout 600s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_redirect off;

            # set headers
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # grafana
    server {
        listen 3000 ssl;
        server_name _;

        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
      
        # Specifies the maximum accepted body size of a client request,
        # as indicated by the request header Content-Length.
        client_max_body_size 256k;

        ssl_certificate /etc/nginx/conf/server.crt;
        ssl_certificate_key /etc/nginx/conf/server.key;

        error_page  497 https://$host:3000$request_uri;

        location / {
            proxy_pass http://grafana:3000;
            # force timeouts if the backend dies
            proxy_read_timeout 600s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_redirect off;

            # set headers
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # rabbitmq
    server {
        listen 15672 ssl;
        server_name _;

        proxy_buffers 16 64k;
        proxy_buffer_size 128k;
      
        # Specifies the maximum accepted body size of a client request,
        # as indicated by the request header Content-Length.
        client_max_body_size 256k;

        ssl_certificate /etc/nginx/conf/server.crt;
        ssl_certificate_key /etc/nginx/conf/server.key;

        error_page  497 https://$host:3000$request_uri;

        location / {
            proxy_pass http://rabbitmq:15672;
            # force timeouts if the backend dies
            proxy_read_timeout 600s;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_redirect off;

            # set headers
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_cache_bypass $http_upgrade;
    }
}